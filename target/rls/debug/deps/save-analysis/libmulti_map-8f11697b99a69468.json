{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0","program":"/home/erick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","multi_map","/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8f11697b99a69468","-C","extra-filename=-8f11697b99a69468","--out-dir","/home/erick/Tarea01_OS/target/rls/debug/deps","-L","dependency=/home/erick/Tarea01_OS/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/erick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/erick/Tarea01_OS/target/rls/debug/deps/libmulti_map-8f11697b99a69468.rmeta"},"prelude":{"crate_id":{"name":"multi_map","disambiguator":[1198669221760664252,6162649096181165510]},"crate_root":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src","external_crates":[{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}}],"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":0,"byte_end":16721,"line_start":1,"line_end":530,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":0,"byte_end":16721,"line_start":1,"line_end":530,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":192},{"krate":0,"index":9},{"krate":0,"index":194},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":10},{"krate":0,"index":30},{"krate":0,"index":35},{"krate":0,"index":41},{"krate":0,"index":98},{"krate":0,"index":110},{"krate":0,"index":104},{"krate":0,"index":46},{"krate":0,"index":51},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":74},{"krate":0,"index":82}],"decl_id":null,"docs":" # multi-map","sig":null,"attributes":[{"value":"/ # multi-map","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":0,"byte_end":15,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":16,"byte_end":19,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `MultiMap` is like a `std::collection::HashMap`, but allows you to use either of","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":20,"byte_end":104,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ two different keys to retrieve items.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":105,"byte_end":146,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":147,"byte_end":150,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The keys have two distinct types - `K1` and `K2` - which may be the same.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":151,"byte_end":228,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ Accessing on the primary `K1` key is via the usual `get`, `get_mut` and","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":229,"byte_end":304,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ `remove_alt` methods, while accessing via the secondary `K2` key is via new","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":305,"byte_end":384,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ `get_alt`, `get_mut_alt` and `remove_alt` methods. The value is of type `V`.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":385,"byte_end":465,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":466,"byte_end":469,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Internally, two `HashMap`s are created - a main one on `<K1, (K2,","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":470,"byte_end":539,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ V)>` and a second one on `<K2, K1>`. The `(K2, V)` tuple is so","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":540,"byte_end":606,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/ that when an item is removed using the `K1` key, the appropriate `K2`","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":607,"byte_end":680,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ value is available so the `K2->K1` map can be removed from the second","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":681,"byte_end":754,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ `MultiMap`, to keep them in sync.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":755,"byte_end":792,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":793,"byte_end":796,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Using two `HashMap`s instead of one naturally brings a slight performance","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":797,"byte_end":874,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ and memory penalty. Notably, indexing by `K2` requires two `HashMap` lookups.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":875,"byte_end":956,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":957,"byte_end":960,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":961,"byte_end":968,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ extern crate multi_map;","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":969,"byte_end":996,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/ use multi_map::MultiMap;","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":997,"byte_end":1025,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1026,"byte_end":1029,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1030,"byte_end":1047,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ #[derive(Hash,Clone,PartialEq,Eq)]","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1048,"byte_end":1086,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ enum ThingIndex {","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1087,"byte_end":1108,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     IndexOne,","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1109,"byte_end":1126,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/     IndexTwo,","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1127,"byte_end":1144,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/     IndexThree,","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1145,"byte_end":1164,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1165,"byte_end":1171,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1172,"byte_end":1175,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1176,"byte_end":1210,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ map.insert(1, ThingIndex::IndexOne, \"Chicken Fried Steak\");","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1211,"byte_end":1274,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ map.insert(2, ThingIndex::IndexTwo, \"Blueberry Pancakes\");","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1275,"byte_end":1337,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1338,"byte_end":1341,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(*map.get_alt(&ThingIndex::IndexOne).unwrap() == \"Chicken Fried Steak\");","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1342,"byte_end":1425,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ assert!(*map.get(&2).unwrap() == \"Blueberry Pancakes\");","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1426,"byte_end":1485,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ assert!(map.remove_alt(&ThingIndex::IndexTwo).unwrap() == \"Blueberry Pancakes\");","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1486,"byte_end":1570,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1571,"byte_end":1578,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1579,"byte_end":1586,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1752,"byte_end":1760,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"MultiMap","qualname":"::MultiMap","value":"MultiMap {  }","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2541,"byte_end":2544,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiMap<K1, K2, V>>::new","value":"pub fn new() -> MultiMap<K1, K2, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new MultiMap. The primary key is of type `K1` and the\n secondary key is of type `K2`. The value is of type `V`. This is as\n compared to a `std::collections::HashMap` which is typed on just `K` and\n `V`.","sig":null,"attributes":[{"value":"/ Creates a new MultiMap. The primary key is of type `K1` and the","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1946,"byte_end":2013,"line_start":55,"line_end":55,"column_start":5,"column_end":72}},{"value":"/ secondary key is of type `K2`. The value is of type `V`. This is as","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2018,"byte_end":2089,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ compared to a `std::collections::HashMap` which is typed on just `K` and","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2094,"byte_end":2170,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ `V`.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2175,"byte_end":2183,"line_start":58,"line_end":58,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2188,"byte_end":2191,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Internally, two HashMaps are created - a main one on `<K1, (K2,","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2196,"byte_end":2263,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/ V)>` and a second one on `<K2, K1>`. The `(K2, V)` tuple is so","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2268,"byte_end":2334,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ that when an item is removed using the `K1` key, the appropriate `K2`","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2339,"byte_end":2412,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ value is available so the `K2->K1` map can be removed from the second","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2417,"byte_end":2490,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ HashMap, to keep them in sync.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2495,"byte_end":2529,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2913,"byte_end":2926,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MultiMap<K1, K2, V>>::with_capacity","value":"pub fn with_capacity(usize) -> MultiMap<K1, K2, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty MultiMap with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty MultiMap with the specified capacity.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2688,"byte_end":2746,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2751,"byte_end":2754,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The multi map will be able to hold at least `capacity` elements without reallocating. If `capacity` is 0, the multi map will not allocate.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":2759,"byte_end":2901,"line_start":74,"line_end":74,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3474,"byte_end":3480,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"insert","qualname":"<MultiMap<K1, K2, V>>::insert","value":"pub fn insert(&mut Self, K1, K2, V)","parent":null,"children":[],"decl_id":null,"docs":" Insert an item into the MultiMap. You must supply both keys to insert\n an item. The keys cannot be modified at a later date, so if you only\n have one key at this time, use a placeholder value for the second key\n (perhaps `K2` is `Option<...>`) and remove then re-insert when the\n second key becomes available.\n","sig":null,"attributes":[{"value":"/ Insert an item into the MultiMap. You must supply both keys to insert","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3121,"byte_end":3194,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ an item. The keys cannot be modified at a later date, so if you only","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3199,"byte_end":3271,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ have one key at this time, use a placeholder value for the second key","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3276,"byte_end":3349,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ (perhaps `K2` is `Option<...>`) and remove then re-insert when the","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3354,"byte_end":3424,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ second key becomes available.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3429,"byte_end":3462,"line_start":86,"line_end":86,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3775,"byte_end":3778,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"get","qualname":"<MultiMap<K1, K2, V>>::get","value":"pub fn get(&Self, &K1) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to an item in the MultiMap using the primary key,\n just like a HashMap.\n","sig":null,"attributes":[{"value":"/ Obtain a reference to an item in the MultiMap using the primary key,","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3662,"byte_end":3734,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ just like a HashMap.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3739,"byte_end":3763,"line_start":93,"line_end":93,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4089,"byte_end":4096,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiMap<K1, K2, V>>::get_mut","value":"pub fn get_mut(&mut Self, &K1) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to an item in the MultiMap using the\n primary key, just like a HashMap.\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to an item in the MultiMap using the","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":3968,"byte_end":4035,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ primary key, just like a HashMap.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4040,"byte_end":4077,"line_start":103,"line_end":103,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4429,"byte_end":4436,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"get_alt","qualname":"<MultiMap<K1, K2, V>>::get_alt","value":"pub fn get_alt(&Self, &K2) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to an item in the MultiMap using the secondary key.\n Ordinary HashMaps can't do this.\n","sig":null,"attributes":[{"value":"/ Obtain a reference to an item in the MultiMap using the secondary key.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4302,"byte_end":4376,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ Ordinary HashMaps can't do this.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4381,"byte_end":4417,"line_start":113,"line_end":113,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4838,"byte_end":4849,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"get_mut_alt","qualname":"<MultiMap<K1, K2, V>>::get_mut_alt","value":"pub fn get_mut_alt(&mut Self, &K2) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to an item in the MultiMap using the\n secondary key. Ordinary HashMaps can't do this.\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to an item in the MultiMap using the","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4703,"byte_end":4770,"line_start":124,"line_end":124,"column_start":5,"column_end":72}},{"value":"/ secondary key. Ordinary HashMaps can't do this.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":4775,"byte_end":4826,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5374,"byte_end":5380,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"remove","qualname":"<MultiMap<K1, K2, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K1: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Remove an item from the HashMap using the primary key. The value for the\n given key is returned (if it exists), just like a HashMap. This removes\n an item from the main HashMap, and the second `<K2, K1>` HashMap.\n","sig":null,"attributes":[{"value":"/ Remove an item from the HashMap using the primary key. The value for the","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5132,"byte_end":5208,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ given key is returned (if it exists), just like a HashMap. This removes","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5213,"byte_end":5288,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ an item from the main HashMap, and the second `<K2, K1>` HashMap.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5293,"byte_end":5362,"line_start":138,"line_end":138,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6339,"byte_end":6351,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MultiMap<K1, K2, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K1: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key. The key may be any borrowed\n form of the map's key type, but Hash and Eq on the borrowed form must match those for the\n key type","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key. The key may be any borrowed","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5686,"byte_end":5781,"line_start":152,"line_end":152,"column_start":5,"column_end":100}},{"value":"/ form of the map's key type, but Hash and Eq on the borrowed form must match those for the","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5786,"byte_end":5879,"line_start":153,"line_end":153,"column_start":5,"column_end":98}},{"value":"/ key type","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5884,"byte_end":5896,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5901,"byte_end":5904,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5909,"byte_end":5923,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5928,"byte_end":5935,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5940,"byte_end":5956,"line_start":158,"line_end":158,"column_start":5,"column_end":21}},{"value":"/ extern crate multi_map;","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5961,"byte_end":5988,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ use multi_map::MultiMap;","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":5993,"byte_end":6021,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6026,"byte_end":6043,"line_start":161,"line_end":161,"column_start":5,"column_end":22}},{"value":"/ let map = multimap! {","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6048,"byte_end":6073,"line_start":162,"line_end":162,"column_start":5,"column_end":30}},{"value":"/     1, \"One\" => String::from(\"Eins\"),","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6078,"byte_end":6119,"line_start":163,"line_end":163,"column_start":5,"column_end":46}},{"value":"/     2, \"Two\" => String::from(\"Zwei\"),","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6124,"byte_end":6165,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/     3, \"Three\" => String::from(\"Drei\"),","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6170,"byte_end":6213,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6218,"byte_end":6224,"line_start":166,"line_end":166,"column_start":5,"column_end":11}},{"value":"/ assert!(map.contains_key(&1));","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6229,"byte_end":6263,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ assert!(!map.contains_key(&4));","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6268,"byte_end":6303,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6308,"byte_end":6315,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6320,"byte_end":6327,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7182,"byte_end":7198,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"contains_key_alt","qualname":"<MultiMap<K1, K2, V>>::contains_key_alt","value":"pub fn contains_key_alt<Q: ?Sized>(&Self, &Q) -> bool where K2: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified alternative key. The key may be\n any borrowed form of the map's key type, but Hash and Eq on the borrowed form must match\n those for the key type","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified alternative key. The key may be","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6500,"byte_end":6594,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ any borrowed form of the map's key type, but Hash and Eq on the borrowed form must match","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6599,"byte_end":6691,"line_start":180,"line_end":180,"column_start":5,"column_end":97}},{"value":"/ those for the key type","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6696,"byte_end":6722,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6727,"byte_end":6730,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6735,"byte_end":6749,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6754,"byte_end":6761,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6766,"byte_end":6782,"line_start":185,"line_end":185,"column_start":5,"column_end":21}},{"value":"/ extern crate multi_map;","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6787,"byte_end":6814,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/ use multi_map::MultiMap;","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6819,"byte_end":6847,"line_start":187,"line_end":187,"column_start":5,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6852,"byte_end":6869,"line_start":188,"line_end":188,"column_start":5,"column_end":22}},{"value":"/ let map = multimap! {","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6874,"byte_end":6899,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/     1, \"One\" => String::from(\"Eins\"),","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6904,"byte_end":6945,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/     2, \"Two\" => String::from(\"Zwei\"),","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6950,"byte_end":6991,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/     3, \"Three\" => String::from(\"Drei\"),","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":6996,"byte_end":7039,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7044,"byte_end":7050,"line_start":193,"line_end":193,"column_start":5,"column_end":11}},{"value":"/ assert!(map.contains_key_alt(&\"One\"));","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7055,"byte_end":7097,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ assert!(!map.contains_key_alt(&\"Four\"));","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7102,"byte_end":7146,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7151,"byte_end":7158,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7163,"byte_end":7170,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7613,"byte_end":7623,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"remove_alt","qualname":"<MultiMap<K1, K2, V>>::remove_alt","value":"pub fn remove_alt<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K2: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Remove an item from the HashMap using the secondary key. The value for\n the given key is returned (if it exists). Ordinary HashMaps can't do\n this. This removes an item from both the main HashMap and the second\n `<K2, K1>` HashMap.\n","sig":null,"attributes":[{"value":"/ Remove an item from the HashMap using the secondary key. The value for","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7345,"byte_end":7419,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ the given key is returned (if it exists). Ordinary HashMaps can't do","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7424,"byte_end":7496,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ this. This removes an item from both the main HashMap and the second","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7501,"byte_end":7573,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ `<K2, K1>` HashMap.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7578,"byte_end":7601,"line_start":209,"line_end":209,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8148,"byte_end":8152,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"iter","qualname":"<MultiMap<K1, K2, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K1, K2, V>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through all the values in the MultiMap in random order.\n Note that the values\n are `(K2, V)` tuples, not `V`, as you would get with a HashMap.\n","sig":null,"attributes":[{"value":"/ Iterate through all the values in the MultiMap in random order.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":7968,"byte_end":8035,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/ Note that the values","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8040,"byte_end":8064,"line_start":225,"line_end":225,"column_start":5,"column_end":29}},{"value":"/ are `(K2, V)` tuples, not `V`, as you would get with a HashMap.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8069,"byte_end":8136,"line_start":226,"line_end":226,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9367,"byte_end":9371,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":103}],"decl_id":null,"docs":" An iterator over the entries of a `MultiMap` like in a `HashMap` but with\n values of the form (K2, V) instead of V.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `MultiMap` like in a `HashMap` but with","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9092,"byte_end":9169,"line_start":264,"line_end":264,"column_start":1,"column_end":78}},{"value":"/ values of the form (K2, V) instead of V.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9170,"byte_end":9214,"line_start":265,"line_end":265,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9215,"byte_end":9218,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9219,"byte_end":9222,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`MultiMap`]. See its","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9223,"byte_end":9299,"line_start":268,"line_end":268,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9300,"byte_end":9327,"line_start":269,"line_end":269,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9328,"byte_end":9331,"line_start":270,"line_end":270,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9672,"byte_end":9680,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" An owning iterator over the entries of a `MultiMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `MultiMap`.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9447,"byte_end":9503,"line_start":276,"line_end":276,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9504,"byte_end":9507,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`MultiMap`]","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9508,"byte_end":9580,"line_start":278,"line_end":278,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9581,"byte_end":9656,"line_start":279,"line_end":279,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":9657,"byte_end":9660,"line_start":280,"line_end":280,"column_start":1,"column_end":4}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1920,"byte_end":1928,"line_start":54,"line_end":54,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8316,"byte_end":8324,"line_start":234,"line_end":234,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8523,"byte_end":8531,"line_start":240,"line_end":240,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8874,"byte_end":8882,"line_start":252,"line_end":252,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":10073,"byte_end":10081,"line_start":293,"line_end":293,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":10902,"byte_end":10906,"line_start":327,"line_end":327,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":11187,"byte_end":11195,"line_start":339,"line_end":339,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":1920,"byte_end":1928,"line_start":54,"line_end":54,"column_start":55,"column_end":63},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8316,"byte_end":8324,"line_start":234,"line_end":234,"column_start":57,"column_end":65},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8523,"byte_end":8531,"line_start":240,"line_end":240,"column_start":77,"column_end":85},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":8874,"byte_end":8882,"line_start":252,"line_end":252,"column_start":29,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":10073,"byte_end":10081,"line_start":293,"line_end":293,"column_start":34,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":5442}},{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":10902,"byte_end":10906,"line_start":327,"line_end":327,"column_start":34,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/erick/.cargo/registry/src/github.com-1ecc6299db9ec823/multi-map-1.3.0/src/lib.rs","byte_start":11187,"byte_end":11195,"line_start":339,"line_end":339,"column_start":30,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":5536}}]}